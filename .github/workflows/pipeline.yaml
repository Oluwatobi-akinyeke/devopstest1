name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set image tag using commit SHA
      - name: Set image tag
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      # Step 3: Login to DockerHub
      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Build and push backend image
      - name: Build and Push Backend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/inventory-backend:${{ env.IMAGE_TAG }} ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/inventory-backend:${{ env.IMAGE_TAG }}

      # Step 5: Build and push frontend image
      - name: Build and Push Frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/inventory-frontend:${{ env.IMAGE_TAG }} ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/inventory-frontend:${{ env.IMAGE_TAG }}

      # Step 6: Deploy to EC2 using Docker Compose
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USER }}/inventory-app

            # Update docker-compose file with new image tags
            sed -i "s|inventory-backend:.*|inventory-backend:${{ env.IMAGE_TAG }}|g" docker-compose.prod.yml
            sed -i "s|inventory-frontend:.*|inventory-frontend:${{ env.IMAGE_TAG }}|g" docker-compose.prod.yml

            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d
